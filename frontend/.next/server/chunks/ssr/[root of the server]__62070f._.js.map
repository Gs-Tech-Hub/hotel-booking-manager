{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Documents/GitHub/hotel-booking-manager/frontend/src/components/Navigation.tsx"],"sourcesContent":["import Link from \"next/link\";\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark\" style={{ backgroundColor: '#000', padding: '1rem 0' }}>\r\n      <div className=\"container\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          <img src=\"/images/logo.png\" alt=\"F-MMM1 Hotel\" width=\"100\"/>\r\n        </a>\r\n        \r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        \r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-white\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-white\" href=\"/about\">About</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-white\" href=\"/room\">Our Rooms</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-white\" href=\"/gallery\">Gallery</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-white\" href=\"/blog\">Blog</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-white\" href=\"/contact\">Contact Us</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;QAAsC,OAAO;YAAE,iBAAiB;YAAQ,SAAS;QAAS;kBACvG,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAE,WAAU;oBAAe,MAAK;8BAC/B,cAAA,8OAAC;wBAAI,KAAI;wBAAmB,KAAI;wBAAe,OAAM;;;;;;;;;;;8BAGvD,8OAAC;oBAAO,WAAU;oBAAiB,MAAK;oBAAS,eAAY;oBAAW,eAAY;oBAAa,iBAAc;oBAAY,iBAAc;oBAAQ,cAAW;8BAC1J,cAAA,8OAAC;wBAAK,WAAU;;;;;;;;;;;8BAGlB,8OAAC;oBAAI,WAAU;oBAA2B,IAAG;8BAC3C,cAAA,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC;oCAAE,WAAU;oCAAsB,MAAK;8CAAI;;;;;;;;;;;0CAE9C,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC;oCAAE,WAAU;oCAAsB,MAAK;8CAAS;;;;;;;;;;;0CAEnD,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC;oCAAE,WAAU;oCAAsB,MAAK;8CAAQ;;;;;;;;;;;0CAElD,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC;oCAAE,WAAU;oCAAsB,MAAK;8CAAW;;;;;;;;;;;0CAErD,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC;oCAAE,WAAU;oCAAsB,MAAK;8CAAQ;;;;;;;;;;;0CAElD,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC;oCAAE,WAAU;oCAAsB,MAAK;8CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOjE"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_59dee874.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"inter_59dee874-module__9CtR0q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Documents/GitHub/hotel-booking-manager/frontend/src/app/layout.tsx"],"sourcesContent":["import Navigation from '@/components/Navigation'\r\nimport Script from 'next/script'\r\nimport './globals.css'\r\nimport { Inter } from 'next/font/google'\r\n\r\nconst inter = Inter({ subsets: ['latin'] })\r\n\r\nexport const metadata = {\r\n  title: 'F-MMM1 Hotel',\r\n  description: 'Your hotel booking platform',\r\n}\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode\r\n}) {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        {/* Bootstrap CSS */}\r\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\" />\r\n        {/* Style CSS */}\r\n        <link rel=\"stylesheet\" href=\"/css/style.css\" />\r\n        {/* Responsive CSS */}\r\n        <link rel=\"stylesheet\" href=\"/css/responsive.css\" />\r\n        {/* Custom Scrollbar CSS */}\r\n        <link rel=\"stylesheet\" href=\"/css/jquery.mCustomScrollbar.min.css\" />\r\n        {/* Font Awesome */}\r\n        <link rel=\"stylesheet\" href=\"https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css\" />\r\n        {/* Fancybox */}\r\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.css\" />\r\n      </head>\r\n      <body className=\"main-layout\">\r\n        {/* Loader */}\r\n        <div className=\"loader_bg\">\r\n          <div className=\"loader\"><img src=\"/images/loading.gif\" alt=\"#\"/></div>\r\n        </div>\r\n\r\n        {/* Header */}\r\n        <header>\r\n          <Navigation />\r\n        </header>\r\n\r\n        {children}\r\n\r\n        {/* Footer */}\r\n        <footer className=\"bg-gray-800 text-white mt-12\">\r\n          <div className=\"container mx-auto px-4 py-8\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold mb-4\">About Us</h3>\r\n                <p className=\"text-gray-300\">\r\n                  MyNextApp is a modern web application template built with Next.js.\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold mb-4\">Quick Links</h3>\r\n                <ul className=\"space-y-2\">\r\n                  <li><a href=\"/privacy\" className=\"text-gray-300 hover:text-white\">Privacy Policy</a></li>\r\n                  <li><a href=\"/terms\" className=\"text-gray-300 hover:text-white\">Terms of Service</a></li>\r\n                  <li><a href=\"/contact\" className=\"text-gray-300 hover:text-white\">Contact Us</a></li>\r\n                </ul>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold mb-4\">Connect</h3>\r\n                <ul className=\"space-y-2\">\r\n                  <li><a href=\"#\" className=\"text-gray-300 hover:text-white\">Twitter</a></li>\r\n                  <li><a href=\"#\" className=\"text-gray-300 hover:text-white\">LinkedIn</a></li>\r\n                  <li><a href=\"#\" className=\"text-gray-300 hover:text-white\">GitHub</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-8 pt-8 border-t border-gray-700 text-center text-gray-300\">\r\n              <p>&copy; {new Date().getFullYear()} MyNextApp. All rights reserved.</p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n        {/* Scripts */}\r\n        <Script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" />\r\n        <Script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\" />\r\n        <Script src=\"/js/jquery.mCustomScrollbar.concat.min.js\" />\r\n        <Script src=\"/js/custom.js\" />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;;;AAMO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;;0BACT,8OAAC;;kCAEC,8OAAC;wBAAK,KAAI;wBAAa,MAAK;;;;;;kCAE5B,8OAAC;wBAAK,KAAI;wBAAa,MAAK;;;;;;kCAE5B,8OAAC;wBAAK,KAAI;wBAAa,MAAK;;;;;;kCAE5B,8OAAC;wBAAK,KAAI;wBAAa,MAAK;;;;;;kCAE5B,8OAAC;wBAAK,KAAI;wBAAa,MAAK;;;;;;kCAE5B,8OAAC;wBAAK,KAAI;wBAAa,MAAK;;;;;;;;;;;;0BAE9B,8OAAC;gBAAK,WAAU;;kCAEd,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCAAS,cAAA,8OAAC;gCAAI,KAAI;gCAAsB,KAAI;;;;;;;;;;;;;;;;kCAI7D,8OAAC;kCACC,cAAA,8OAAC,gIAAA,CAAA,UAAU;;;;;;;;;;oBAGZ;kCAGD,8OAAC;wBAAO,WAAU;kCAChB,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;8DAA6B;;;;;;8DAC3C,8OAAC;oDAAE,WAAU;8DAAgB;;;;;;;;;;;;sDAI/B,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;8DAA6B;;;;;;8DAC3C,8OAAC;oDAAG,WAAU;;sEACZ,8OAAC;sEAAG,cAAA,8OAAC;gEAAE,MAAK;gEAAW,WAAU;0EAAiC;;;;;;;;;;;sEAClE,8OAAC;sEAAG,cAAA,8OAAC;gEAAE,MAAK;gEAAS,WAAU;0EAAiC;;;;;;;;;;;sEAChE,8OAAC;sEAAG,cAAA,8OAAC;gEAAE,MAAK;gEAAW,WAAU;0EAAiC;;;;;;;;;;;;;;;;;;;;;;;sDAGtE,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;8DAA6B;;;;;;8DAC3C,8OAAC;oDAAG,WAAU;;sEACZ,8OAAC;sEAAG,cAAA,8OAAC;gEAAE,MAAK;gEAAI,WAAU;0EAAiC;;;;;;;;;;;sEAC3D,8OAAC;sEAAG,cAAA,8OAAC;gEAAE,MAAK;gEAAI,WAAU;0EAAiC;;;;;;;;;;;sEAC3D,8OAAC;sEAAG,cAAA,8OAAC;gEAAE,MAAK;gEAAI,WAAU;0EAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAIjE,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;;4CAAE;4CAAQ,IAAI,OAAO,WAAW;4CAAG;;;;;;;;;;;;;;;;;;;;;;;kCAM1C,8OAAC,8HAAA,CAAA,UAAM;wBAAC,KAAI;;;;;;kCACZ,8OAAC,8HAAA,CAAA,UAAM;wBAAC,KAAI;;;;;;kCACZ,8OAAC,8HAAA,CAAA,UAAM;wBAAC,KAAI;;;;;;kCACZ,8OAAC,8HAAA,CAAA,UAAM;wBAAC,KAAI;;;;;;;;;;;;;;;;;;AAIpB"}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Documents/GitHub/hotel-booking-manager/frontend/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Documents/GitHub/hotel-booking-manager/frontend/node_modules/next/dist/client/script.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,+BAA+B,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Documents/GitHub/hotel-booking-manager/frontend/node_modules/next/dist/client/script.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,+BAA+B,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 609, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Documents/GitHub/hotel-booking-manager/frontend/node_modules/next/src/client/script.tsx"],"sourcesContent":["'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  const { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript(props)\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n"],"names":["handleClientScriptLoad","initScriptLoader","ScriptCache","Map","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","forEach","stylesheet","as","window","head","document","link","createElement","type","rel","href","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","setAttributesFromProps","setAttribute","body","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","JSON","stringify","preload","integrity","crossOrigin","Object","defineProperty","value"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Documents/GitHub/hotel-booking-manager/frontend/node_modules/next/script.js"],"sourcesContent":["module.exports = require('./dist/client/script')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}